<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:annotation-config/>
    <security:global-method-security secured-annotations="enabled">
    </security:global-method-security>

    <security:http> <!-- use-expressions="true" -->
        <security:intercept-url pattern="/" access="isAnonymous()"/>
        <security:intercept-url pattern="/static/**" access="permitAll"/>
        <security:intercept-url pattern="/favicon.ico" access="permitAll"/>
        <security:intercept-url pattern="/nimda/*" access="permitAll"/>
        <security:intercept-url pattern="/executeops" access="permitAll"/> <!-- 测试用 -->
        <security:intercept-url pattern="/preMerge" access="permitAll"/> <!-- 测试用 -->
        <security:intercept-url pattern="/SimulateMerge" access="permitAll"/> <!-- 测试用 -->
        <!--<security:intercept-url pattern="/testFusion/*" access="permitAll"/> &lt;!&ndash; 测试用 &ndash;&gt;-->
        <security:intercept-url pattern="/apple-touch-icon-precomposed.png" access="permitAll"/>  <!-- for Safari -->
        <security:intercept-url pattern="/apple-touch-icon.png" access="permitAll"/>  <!-- for Safari -->
        <security:intercept-url pattern="/about" access="permitAll"/>
        <security:intercept-url pattern="/help" access="permitAll"/>
        <security:intercept-url pattern="/forget" access="permitAll"/>
        <security:intercept-url pattern="/forget/verify" access="permitAll"/>
        <security:intercept-url pattern="/resetpassword" access="permitAll"/>
        <security:intercept-url pattern="/checkmail" access="permitAll"/>
        <security:intercept-url pattern="/checkmail/resend" access="permitAll"/>
        <security:intercept-url pattern="/signup/verify" access="permitAll"/>
        <security:intercept-url pattern="/signin*" access="isAnonymous()"/>
        <security:intercept-url pattern="/signup*" access="isAnonymous()"/>
        <security:intercept-url pattern="/signout" access="hasAnyRole('ROLE_USER', 'ROLE_USER_TOBE')"/> <!-- 尚未激活的用户能登出（如 ROLE_USER_TOBE） -->
        <security:intercept-url pattern="/**" access="hasRole('ROLE_USER')"/> <!-- 尚未激活的用户不能登录（如 ROLE_USER_TOBE） -->
        <security:form-login login-page="/signin"
                             authentication-failure-url="/signin?login_error=true"
                             default-target-url="/user"
                             login-processing-url="/signin"
                             username-parameter="mail"
                             password-parameter="password"/>
        <security:access-denied-handler error-page="/denied" />
        <!--<security:logout logout-success-url="/signin"-->
                         <!--invalidate-session="true"-->
                         <!--logout-url="/signout"/>-->

        <!--<security:csrf/>-->
        <!--<security:csrf disabled="true"/>-->

        <security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
        <!--<security:custom-filter position="FORM_LOGIN_FILTER" ref="myAuthFilter" />-->

        <security:session-management session-authentication-strategy-ref="sas"/>

    </security:http>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="userRepository">
            <security:password-encoder hash="md5">
                <security:salt-source system-wide="cewuiqwzie"/>
            </security:password-encoder>
        </security:authentication-provider>
    </security:authentication-manager>


    <!-- For concurrent session support -->

    <bean id="concurrencyFilter" class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <constructor-arg name="sessionRegistry" ref="sessionRegistry" />
        <constructor-arg name="expiredUrl" value="/session-expired.htm" />
    </bean>

    <bean id="sas" class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry"/>
                    <property name="maximumSessions" value="1" />
                    <property name="exceptionIfMaximumExceeded" value="true" />
                </bean>
                <bean class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy">
                </bean>
                <bean class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>

    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />

    <bean id="sessionService" class="net.stigmod.service.SessionService">
        <property name="sessionRegistry" ref="sessionRegistry"/>
    </bean>

</beans>